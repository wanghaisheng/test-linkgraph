name: link graph content planner topic 
on:
  workflow_dispatch:
    inputs:
#       username:
#         description: username
#         type: enviroment
#         required: true
#       password:
#         description: password
#         type: enviroment
#         required: true
      keyword:
        description: keyword
        type: enviroment
        required: true
jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright/python:v1.35.0-jammy      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup xvfb (Linux)
        if: runner.os == 'Linux'
        run: |
          apt-get update     
          apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
          # start xvfb in the background
          /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
# https://stackoverflow.com/questions/63592708/error-no-display-environment-variable-specified
      #          apt-get install xvfb
 #         touch ~/.Xauthority
  #        xauth generate :0 . trusted
   #       xauth add ${HOST}:0 . $(xxd -l 16 -p /dev/urandom)
    #      xauth list
     #     export DISPLAY=:0        
        run: |
          apt-get update     
          export DISPLAY=localhost:0.0
          export MOZ_HEADLESS=1    
          python -m pip install --upgrade pip
          pip install httpx numpy
          pip install -r  requirements.txt 
      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps          
      - name: run demo
        run: |
          env HOME=/root python test.py
        env:
          keyword: '${{ github.event.inputs.keyword }}'     
      - name: Debug Checkout
        run: find .          
#       - name: Config git
#         run: >
#           git config --local user.email "ations@github.com"

#           git config --local user.name "github"

#           git config --global http.postBuffer 157286400

#           git remote set-url origin "https://${{ github.actor }}:${{
#           github.token }}@github.com/${{ github.repository }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./*
          asset_name: result.zip
          asset_content_type: application/zip
